{"version":3,"sources":["components/ColorPane.js","components/SetColorModule.js","components/Results.js","components/Game.js","App.js","index.js"],"names":["ColorPane","red","green","blue","Number","toString","color","this","computeColorCode","props","className","style","backgroundColor","height","Component","SetColorModule","handleNumberChange","e","target","name","value","onNumberChange","width","type","disabled","onChange","Results","randomRed","randomColor","randomGreen","randomBlue","userRed","userColor","userGreen","userBlue","redDiff","Math","abs","greenDiff","blueDiff","result","resultText","onClick","onButtonClick","hidden","textAlign","Game","state","getRandomColor","playMode","bind","showResults","floor","random","setState","maxWidth","startNewGame","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.031fe516.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass ColorPane extends Component {\r\n  computeColorCode(red, green, blue) {\r\n    let redCode = (red < 16 ? \"0\" : \"\") + Number(red).toString(16);\r\n    let greenCode = (green < 16 ? \"0\" : \"\") + Number(green).toString(16);\r\n    let blueCode = (blue < 16 ? \"0\" : \"\") + Number(blue).toString(16);\r\n    return \"#\" + redCode + greenCode + blueCode;\r\n  }\r\n\r\n  render() {\r\n    const color = this.computeColorCode(\r\n      this.props.color.red,\r\n      this.props.color.green,\r\n      this.props.color.blue\r\n    );\r\n    return (\r\n      <div\r\n        className=\"rounded mb-3\"\r\n        style={{ backgroundColor: color, height: \"160px\" }}\r\n      ></div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ColorPane;\r\n","import React, { Component } from \"react\";\r\nimport ColorPane from \"./ColorPane\";\r\n\r\nclass SetColorModule extends Component {\r\n  handleNumberChange = (e) => {\r\n    let color = e.target.name;\r\n    let value = e.target.value === \"\" ? \"\" : Number(e.target.value);\r\n    if (value < 0) value = 0;\r\n    if (value > 255) value = 255;\r\n    this.props.onNumberChange(color, value);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <ColorPane color={this.props.color} />\r\n        <form style={{ width: \"150px\" }}>\r\n          <div className=\"input-group mb-3\">\r\n            <div className=\"input-group-prepend\">\r\n              <span className=\"input-group-text\">Red:</span>\r\n            </div>\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              name=\"red\"\r\n              value={this.props.color.red}\r\n              disabled={this.props.disabled}\r\n              onChange={this.handleNumberChange}\r\n            />\r\n          </div>\r\n          <div className=\"input-group mb-3\">\r\n            <div className=\"input-group-prepend\">\r\n              <span className=\"input-group-text\">Green:</span>\r\n            </div>\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              name=\"green\"\r\n              value={this.props.color.green}\r\n              disabled={this.props.disabled}\r\n              onChange={this.handleNumberChange}\r\n            />\r\n          </div>\r\n          <div className=\"input-group mb-3\">\r\n            <div className=\"input-group-prepend\">\r\n              <span className=\"input-group-text\">Blue:</span>\r\n            </div>\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              name=\"blue\"\r\n              value={this.props.color.blue}\r\n              disabled={this.props.disabled}\r\n              onChange={this.handleNumberChange}\r\n            />\r\n          </div>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SetColorModule;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Results extends Component {\r\n  render() {\r\n    let randomRed = this.props.randomColor.red;\r\n    let randomGreen = this.props.randomColor.green;\r\n    let randomBlue = this.props.randomColor.blue;\r\n    let userRed = Number(this.props.userColor.red);\r\n    let userGreen = Number(this.props.userColor.green);\r\n    let userBlue = Number(this.props.userColor.blue);\r\n    let redDiff = Math.abs(randomRed - userRed);\r\n    let greenDiff = Math.abs(randomGreen - userGreen);\r\n    let blueDiff = Math.abs(randomBlue - userBlue);\r\n    let result = redDiff + greenDiff + blueDiff;\r\n    let resultText = \"\";\r\n\r\n    if (result === 0) {\r\n      resultText = \"Unbelievable! You've hit it absolutely spot on!\";\r\n    } else if (result > 0 && result <= 15) {\r\n      resultText = \"Amazing! You were very, very close this time!\";\r\n    } else if (result > 15 && result <= 50) {\r\n      resultText = \"Good job! That was pretty close!\";\r\n    } else if (result > 50 && result <= 120) {\r\n      resultText =\r\n        \"Well, that's not exatly it, but you've got the right idea...\";\r\n    } else {\r\n      resultText = \"Oops! That's not even close!\";\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-primary btn-block\"\r\n          onClick={this.props.onButtonClick}\r\n          hidden={!this.props.hidden}\r\n        >\r\n          Display Results\r\n        </button>\r\n        <br />\r\n        <div hidden={this.props.hidden}>\r\n          <h4 style={{ textAlign: \"center\" }}>{resultText}</h4>\r\n          <br />\r\n          <table className=\"table table-sm\">\r\n            <thead className=\"thead-light\">\r\n              <tr>\r\n                <th></th>\r\n                <th>Our color</th>\r\n                <th>Your color</th>\r\n                <th>Difference</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td>\r\n                  <strong>Red</strong>\r\n                </td>\r\n                <td>{randomRed}</td>\r\n                <td>{userRed}</td>\r\n                <td>{redDiff}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <strong>Green</strong>\r\n                </td>\r\n                <td>{randomGreen}</td>\r\n                <td>{userGreen}</td>\r\n                <td>{greenDiff}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <strong>Blue</strong>\r\n                </td>\r\n                <td>{randomBlue}</td>\r\n                <td>{userBlue}</td>\r\n                <td>{blueDiff}</td>\r\n              </tr>\r\n            </tbody>\r\n            <tfoot>\r\n              <tr>\r\n                <td />\r\n                <td />\r\n                <td>\r\n                  <strong>Total:</strong>\r\n                </td>\r\n                <td>\r\n                  <strong>{result}</strong>\r\n                </td>\r\n              </tr>\r\n            </tfoot>\r\n          </table>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Results;\r\n","import React, { Component } from \"react\";\r\nimport ColorPane from \"./ColorPane\";\r\nimport SetColorModule from \"./SetColorModule\";\r\nimport Results from \"./Results\";\r\n\r\nclass Game extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      randomColor: this.getRandomColor(),\r\n      userColor: {\r\n        red: 0,\r\n        green: 0,\r\n        blue: 0\r\n      },\r\n      playMode: true\r\n    };\r\n\r\n    this.onNumberChange = this.onNumberChange.bind(this);\r\n    this.showResults = this.showResults.bind(this);\r\n  }\r\n\r\n  getRandomColor() {\r\n    return {\r\n      red: Math.floor(Math.random() * 256),\r\n      green: Math.floor(Math.random() * 256),\r\n      blue: Math.floor(Math.random() * 256)\r\n    };\r\n  }\r\n\r\n  startNewGame() {\r\n    this.setState({\r\n      randomColor: this.getRandomColor(),\r\n      userColor: {\r\n        red: 0,\r\n        green: 0,\r\n        blue: 0\r\n      },\r\n      playMode: true\r\n    });\r\n  }\r\n\r\n  onNumberChange(color, value) {\r\n    let userColor = this.state.userColor;\r\n    userColor[color] = value;\r\n    this.setState({ userColor: userColor });\r\n  }\r\n\r\n  showResults() {\r\n    this.setState({ playMode: false });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container p-3 my-3 border\" style={{ maxWidth: \"600px\" }}>\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-6\">\r\n            <h4 className=\"text-center\">Here's a random color</h4>\r\n            <ColorPane color={this.state.randomColor} />\r\n          </div>\r\n          <div className=\"col-sm-6\">\r\n            <h4 className=\"text-center\">Can you match it?</h4>\r\n            <SetColorModule\r\n              color={this.state.userColor}\r\n              disabled={!this.state.playMode}\r\n              onNumberChange={this.onNumberChange}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-2\" />\r\n          <div className=\"col-sm-8\">\r\n            <Results\r\n              randomColor={this.state.randomColor}\r\n              userColor={this.state.userColor}\r\n              hidden={this.state.playMode}\r\n              onButtonClick={this.showResults}\r\n            />\r\n          </div>\r\n          <div className=\"col-sm-2\" />\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-sm text-center\">\r\n            <button\r\n              className=\"btn btn-primary btn-lg btn-block\"\r\n              type=\"button\"\r\n              onClick={this.startNewGame.bind(this)}\r\n            >\r\n              New Game\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Game;\r\n","import React from \"react\";\nimport Game from \"./components/Game\";\n\nfunction App() {\n  return <Game />;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}